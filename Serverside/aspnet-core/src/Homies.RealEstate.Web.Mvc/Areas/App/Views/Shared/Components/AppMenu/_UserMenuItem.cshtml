@using Abp.Collections.Extensions
@using Homies.RealEstate.Web.Areas.App.Views.Shared.Components.AppMenu
@using Homies.RealEstate.Web.Navigation
@model UserMenuItemViewModel
@{
    var orderedChildMenuItems = Model.MenuItem.Items.OrderByCustom().ToList();
}

<li class="menu-item menu-item-submenu @(Model.MenuItem.IsMenuActive(Model.CurrentPageName) ? "menu-item-active" : "") @(Model.MenuItem.IsMenuActive(Model.CurrentPageName) && Model.MenuItem.Items.Count > 0 ? "menu-item-open" : "")"
    aria-haspopup="true"
    @(Model.RootLevel ? "" : " role=none")
    data-menu-toggle="hover">
    @if (Model.MenuItem.Items.IsNullOrEmpty())
    {
        if (string.IsNullOrEmpty(Model.MenuItem.Target))
        {
            Model.MenuItem.Target = "_self";
        }
        <a href="@Model.MenuItem.CalculateUrl(ApplicationPath)" class="menu-link" target="@Model.MenuItem.Target"
           role="menuitem"
           aria-haspopup="true"
           aria-expanded="false"
           tabindex="@(Model.MenuItemIndex == 0 ? "0" : "-1")">
            <span class="menu-item-here"></span>
            <span class="menu-icon">
                <i class="menu-link-icon @Model.MenuItem.Icon"></i>
            </span>
            <span class="menu-text">
                @Model.MenuItem.DisplayName
            </span>
        </a>
    }
    else
    {
        <a href="#" class="menu-link menu-toggle"
           role="menuitem"
           aria-haspopup="true"
           aria-expanded="false"
           tabindex="@(Model.MenuItemIndex == 0 ? "0" : "-1")">
            <span class="menu-item-here"></span>
            <span class="menu-icon">
                <i class="menu-link-icon @Model.MenuItem.Icon"></i>
            </span>
            <span class="menu-text">
                @Model.MenuItem.DisplayName
            </span>
            <i class="menu-arrow"></i>
        </a>
        <nav class="menu-submenu" aria-label="@Model.MenuItem.DisplayName">
            <span class="menu-arrow"></span>
            <ul class="menu-subnav"
                role="menu"
                aria-label="@Model.MenuItem.DisplayName">
                @for (var i = 0; i < Model.MenuItem.Items.Count; i++)
                {
                    var childMenuItem = orderedChildMenuItems[i];
                    if (!childMenuItem.IsVisible)
                    {
                        continue;
                    }
                    @await Html.PartialAsync("Components/AppMenu/_UserMenuItem", new UserMenuItemViewModel
                    {
                        MenuItem = childMenuItem,
                        MenuItemIndex = i,
                        CurrentPageName = Model.CurrentPageName,
                        RootLevel = false
                    })
                }
            </ul>
        </nav>
    }
</li>
