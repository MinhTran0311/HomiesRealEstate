import { GridsterComponentInterface } from './gridster.interface';
import { GridsterItem } from './gridsterItem.interface';
export declare class GridsterEmptyCell {
    private gridster;
    initialItem: GridsterItem | null;
    emptyCellClick: (() => void) | null;
    emptyCellClickTouch: (() => void) | null;
    emptyCellContextMenu: (() => void) | null;
    emptyCellDrop: (() => void) | null;
    emptyCellDrag: (() => void) | null;
    emptyCellDragTouch: (() => void) | null;
    emptyCellMMove: () => void;
    emptyCellMMoveTouch: () => void;
    emptyCellUp: () => void;
    emptyCellUpTouch: () => void;
    emptyCellMove: (() => void) | null;
    emptyCellExit: (() => void) | null;
    constructor(gridster: GridsterComponentInterface);
    destroy(): void;
    updateOptions(): void;
    emptyCellClickCb(e: MouseEvent): void;
    emptyCellContextMenuCb(e: MouseEvent): void;
    emptyCellDragDrop(e: DragEvent): void;
    emptyCellDragOver(e: DragEvent): void;
    emptyCellMouseDown(e: MouseEvent): void;
    emptyCellMouseMove(e: MouseEvent): void;
    emptyCellMouseUp(e: MouseEvent): void;
    getPixelsX(e: MouseEvent, rect: ClientRect): number;
    getPixelsY(e: MouseEvent, rect: ClientRect): number;
    getValidItemFromEvent(e: MouseEvent, oldItem?: GridsterItem | null): GridsterItem | undefined;
}
