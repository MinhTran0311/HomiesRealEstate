import { __decorate } from "tslib";
///<reference path="../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts"/>
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var AbpUserConfigurationService = /** @class */ (function () {
    function AbpUserConfigurationService(_http) {
        this._http = _http;
    }
    AbpUserConfigurationService.prototype.initialize = function () {
        this._http.get('/AbpUserConfiguration/GetAll')
            .subscribe(function (result) {
            jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));
        });
    };
    AbpUserConfigurationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    AbpUserConfigurationService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpUserConfigurationService_Factory() { return new AbpUserConfigurationService(i0.ɵɵinject(i1.HttpClient)); }, token: AbpUserConfigurationService, providedIn: "root" });
    AbpUserConfigurationService = __decorate([
        Injectable({
            providedIn: 'root'
        })
    ], AbpUserConfigurationService);
    return AbpUserConfigurationService;
}());
export { AbpUserConfigurationService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJwLXVzZXItY29uZmlndXJhdGlvbi5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYWJwLW5nMi1tb2R1bGUvIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvYWJwLXVzZXItY29uZmlndXJhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxtR0FBbUc7QUFFbkcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7OztBQVFsRDtJQUVJLHFDQUFvQixLQUFpQjtRQUFqQixVQUFLLEdBQUwsS0FBSyxDQUFZO0lBRXJDLENBQUM7SUFFRCxnREFBVSxHQUFWO1FBQ0ksSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsOEJBQThCLENBQUM7YUFDekMsU0FBUyxDQUFDLFVBQUEsTUFBTTtZQUNiLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pFLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQzs7Z0JBVDBCLFVBQVU7OztJQUY1QiwyQkFBMkI7UUFIdkMsVUFBVSxDQUFDO1lBQ1IsVUFBVSxFQUFFLE1BQU07U0FDckIsQ0FBQztPQUNXLDJCQUEyQixDQWF2QztzQ0F4QkQ7Q0F3QkMsQUFiRCxJQWFDO1NBYlksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiLy8vPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2FicC13ZWItcmVzb3VyY2VzL0FicC9GcmFtZXdvcmsvc2NyaXB0cy9hYnAuZC50c1wiLz5cclxuXHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuXHJcbmRlY2xhcmUgdmFyIGpRdWVyeTogYW55O1xyXG5kZWNsYXJlIHZhciBhYnA6IGFueTtcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQWJwVXNlckNvbmZpZ3VyYXRpb25TZXJ2aWNlIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9odHRwOiBIdHRwQ2xpZW50KSB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9odHRwLmdldCgnL0FicFVzZXJDb25maWd1cmF0aW9uL0dldEFsbCcpXHJcbiAgICAgICAgICAgIC5zdWJzY3JpYmUocmVzdWx0ID0+IHtcclxuICAgICAgICAgICAgICAgIGpRdWVyeS5leHRlbmQodHJ1ZSwgYWJwLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG59Il19