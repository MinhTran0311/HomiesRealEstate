import { __decorate } from "tslib";
///<reference path="../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts"/>
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
var AbpSessionService = /** @class */ (function () {
    function AbpSessionService() {
    }
    Object.defineProperty(AbpSessionService.prototype, "userId", {
        get: function () {
            return abp.session.userId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbpSessionService.prototype, "tenantId", {
        get: function () {
            return abp.session.tenantId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbpSessionService.prototype, "impersonatorUserId", {
        get: function () {
            return abp.session.impersonatorUserId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbpSessionService.prototype, "impersonatorTenantId", {
        get: function () {
            return abp.session.impersonatorTenantId;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbpSessionService.prototype, "multiTenancySide", {
        get: function () {
            return abp.session.multiTenancySide;
        },
        enumerable: true,
        configurable: true
    });
    AbpSessionService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpSessionService_Factory() { return new AbpSessionService(); }, token: AbpSessionService, providedIn: "root" });
    AbpSessionService = __decorate([
        Injectable({
            providedIn: 'root'
        })
    ], AbpSessionService);
    return AbpSessionService;
}());
export { AbpSessionService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJwLXNlc3Npb24uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FicC1uZzItbW9kdWxlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3Nlc3Npb24vYWJwLXNlc3Npb24uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0dBQXNHO0FBRXRHLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzNDO0lBQUE7S0FzQkM7SUFwQkcsc0JBQUkscUNBQU07YUFBVjtZQUNJLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDOUIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSx1Q0FBUTthQUFaO1lBQ0ksT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUNoQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGlEQUFrQjthQUF0QjtZQUNJLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG1EQUFvQjthQUF4QjtZQUNJLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztRQUM1QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLCtDQUFnQjthQUFwQjtZQUNJLE9BQU8sR0FBRyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTs7SUFwQlEsaUJBQWlCO1FBSDdCLFVBQVUsQ0FBQztZQUNSLFVBQVUsRUFBRSxNQUFNO1NBQ3JCLENBQUM7T0FDVyxpQkFBaUIsQ0FzQjdCOzRCQTdCRDtDQTZCQyxBQXRCRCxJQXNCQztTQXRCWSxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLy88cmVmZXJlbmNlIHBhdGg9XCIuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYWJwLXdlYi1yZXNvdXJjZXMvQWJwL0ZyYW1ld29yay9zY3JpcHRzL2FicC5kLnRzXCIvPlxyXG5cclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoe1xyXG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBYnBTZXNzaW9uU2VydmljZSB7XHJcblxyXG4gICAgZ2V0IHVzZXJJZCgpOiBudW1iZXIgfCB1bmRlZmluZWQge1xyXG4gICAgICAgIHJldHVybiBhYnAuc2Vzc2lvbi51c2VySWQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHRlbmFudElkKCk6IG51bWJlciB8IHVuZGVmaW5lZCB7XHJcbiAgICAgICAgcmV0dXJuIGFicC5zZXNzaW9uLnRlbmFudElkO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbXBlcnNvbmF0b3JVc2VySWQoKTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcclxuICAgICAgICByZXR1cm4gYWJwLnNlc3Npb24uaW1wZXJzb25hdG9yVXNlcklkO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBpbXBlcnNvbmF0b3JUZW5hbnRJZCgpOiBudW1iZXIgfCB1bmRlZmluZWQge1xyXG4gICAgICAgIHJldHVybiBhYnAuc2Vzc2lvbi5pbXBlcnNvbmF0b3JUZW5hbnRJZDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbXVsdGlUZW5hbmN5U2lkZSgpOiBhYnAubXVsdGlUZW5hbmN5LnNpZGVzIHtcclxuICAgICAgICByZXR1cm4gYWJwLnNlc3Npb24ubXVsdGlUZW5hbmN5U2lkZTtcclxuICAgIH1cclxuXHJcbn0iXX0=