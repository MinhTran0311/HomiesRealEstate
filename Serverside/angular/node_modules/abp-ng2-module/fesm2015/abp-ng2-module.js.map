{"version":3,"file":"abp-ng2-module.js","sources":["ng://abp-ng2-module/lib/abp.module.ts","ng://abp-ng2-module/lib/services/auth/token.service.ts","ng://abp-ng2-module/lib/services/auth/permission-checker.service.ts","ng://abp-ng2-module/lib/services/features/feature-checker.service.ts","ng://abp-ng2-module/lib/services/localization/localization.service.ts","ng://abp-ng2-module/lib/services/log/log.service.ts","ng://abp-ng2-module/lib/services/message/message.service.ts","ng://abp-ng2-module/lib/services/multi-tenancy/abp-multi-tenancy.service.ts","ng://abp-ng2-module/lib/services/notify/notify.service.ts","ng://abp-ng2-module/lib/services/session/abp-session.service.ts","ng://abp-ng2-module/lib/services/settings/setting.service.ts","ng://abp-ng2-module/lib/services/utils/utils.service.ts","ng://abp-ng2-module/lib/services/abp-user-configuration.service.ts","ng://abp-ng2-module/lib/interceptors/abp-http-configuration.service.ts","ng://abp-ng2-module/lib/interceptors/refresh-token.service.ts","ng://abp-ng2-module/lib/interceptors/abpHttpInterceptor.ts","ng://abp-ng2-module/public-api.ts","ng://abp-ng2-module/abp-ng2-module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class AbpModule { }\n","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n    getToken(): string {\r\n        return abp.auth.getToken();\r\n    }\r\n\r\n    getTokenCookieName(): string {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n\r\n    clearToken(): void {\r\n        abp.auth.clearToken();\r\n    }\r\n\r\n    setToken(authToken: string, expireDate?: Date): void {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n\r\n    //refresh token\r\n    getRefreshToken(): string {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n\r\n    getRefreshTokenCookieName(): string {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n\r\n    clearRefreshToken(): void {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n\r\n    setRefreshToken(refreshToken: string, expireDate?: Date): void {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PermissionCheckerService {\r\n\r\n    isGranted(permissionName: string): boolean {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatureCheckerService {\r\n\r\n    get(featureName: string): abp.features.IFeature {\r\n        return abp.features.get(featureName);\r\n    }\r\n\r\n    getValue(featureName: string): string {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n\r\n    isEnabled(featureName: string): boolean {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocalizationService {\r\n\r\n    get languages(): abp.localization.ILanguageInfo[] {\r\n        return abp.localization.languages;\r\n    }\r\n\r\n    get currentLanguage(): abp.localization.ILanguageInfo {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n\r\n    localize(key: string, sourceName: string): string {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    \r\n    getSource(sourceName: string): (...key: string[]) => string {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    debug(logObject?: any): void {\r\n        abp.log.debug(logObject);\r\n    }\r\n\r\n    info(logObject?: any): void {\r\n        abp.log.info(logObject);\r\n    }\r\n\r\n    warn(logObject?: any): void {\r\n        abp.log.warn(logObject);\r\n    }\r\n\r\n    error(logObject?: any): void {\r\n        abp.log.error(logObject);\r\n    }\r\n\r\n    fatal(logObject?: any): void {\r\n        abp.log.fatal(logObject);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n    info(message: string, title?: string, options?: any): any {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): any {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): any {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): any {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n\r\n    confirm(message: string, title?: string, callback?: (result: boolean) => void, options?: any): any {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpMultiTenancyService {\r\n\r\n    get isEnabled(): boolean {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotifyService {\r\n\r\n    info(message: string, title?: string, options?: any): void {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): void {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): void {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): void {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpSessionService {\r\n\r\n    get userId(): number | undefined {\r\n        return abp.session.userId;\r\n    }\r\n\r\n    get tenantId(): number | undefined {\r\n        return abp.session.tenantId;\r\n    }\r\n\r\n    get impersonatorUserId(): number | undefined {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n\r\n    get impersonatorTenantId(): number | undefined {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n\r\n    get multiTenancySide(): abp.multiTenancy.sides {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingService {\r\n\r\n    get(name: string): string {\r\n        return abp.setting.get(name);\r\n    }\r\n\r\n    getBoolean(name: string): boolean {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    \r\n    getInt(name: string): number {\r\n        return abp.setting.getInt(name);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n  getCookieValue(key: string): string {\r\n    return abp.utils.getCookieValue(key);\r\n  }\r\n\r\n  setCookieValue(key: string, value: string, expireDate?: Date, path?: string, domain?: string, attributes?: any): void {\r\n    abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\r\n  }\r\n\r\n  deleteCookie(key: string, path?: string): void {\r\n    abp.utils.deleteCookie(key, path);\r\n  }\r\n}\r\n","///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var abp: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpUserConfigurationService {\r\n\r\n    constructor(private _http: HttpClient) {\r\n        \r\n    }\r\n\r\n    initialize(): void {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n                jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n            });\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageService } from '../services/message/message.service';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IErrorInfo, IAjaxResponse } from '../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpHttpConfigurationService {\r\n\r\n    constructor(\r\n        private _messageService: MessageService,\r\n        private _logService: LogService) {\r\n    }\r\n\r\n    defaultError = <IErrorInfo>{\r\n        message: 'An error has occurred!',\r\n        details: 'Error details were not sent by server.'\r\n    };\r\n\r\n    defaultError401 = <IErrorInfo>{\r\n        message: 'You are not authenticated!',\r\n        details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n    };\r\n\r\n    defaultError403 = <IErrorInfo>{\r\n        message: 'You are not authorized!',\r\n        details: 'You are not allowed to perform this operation.'\r\n    };\r\n\r\n    defaultError404 = <IErrorInfo>{\r\n        message: 'Resource not found!',\r\n        details: 'The resource requested could not be found on the server.'\r\n    };\r\n\r\n    logError(error: IErrorInfo): void {\r\n        this._logService.error(error);\r\n    }\r\n\r\n    showError(error: IErrorInfo): any {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        } else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n\r\n    handleTargetUrl(targetUrl: string): void {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        } else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string) {\r\n        const self = this;\r\n\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        } else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>) {\r\n        const self = this;\r\n\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(\r\n                    self.showError(self.defaultError401),\r\n                    '/'\r\n                );\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any> {\r\n        var newResponse: HttpResponse<any>;\r\n\r\n        if (ajaxResponse.success) {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);;\r\n            }\r\n        } else {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n\r\n        return newResponse;\r\n    }\r\n\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n\r\n        return responseObj as IAjaxResponse;\r\n    }\r\n\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any> {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n\r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                }\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport abstract class RefreshTokenService {\r\n    /**\r\n     * Try to authenticate with refresh token and return if auth succeed\r\n     */\r\n    abstract tryAuthWithRefreshToken(): Observable<boolean>;\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { TokenService } from '../services/auth/token.service';\r\nimport { UtilsService } from '../services/utils/utils.service';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { switchMap, filter, take, catchError, tap, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { AbpHttpConfigurationService } from './abp-http-configuration.service'\r\nimport { RefreshTokenService } from './refresh-token.service'\r\ndeclare const abp: any;\r\n\r\n@Injectable()\r\nexport class AbpHttpInterceptor implements HttpInterceptor {\r\n\r\n    protected configuration: AbpHttpConfigurationService;\r\n    private _tokenService: TokenService = new TokenService();\r\n    private _utilsService: UtilsService = new UtilsService();\r\n    private _logService: LogService = new LogService();\r\n\r\n    constructor(configuration: AbpHttpConfigurationService,\r\n        private _injector: Injector) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(\r\n                catchError(error => {\r\n                    if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                        return this.tryAuthWithRefreshToken(request, next, error);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }),\r\n                switchMap((event) => {\r\n                    return this.handleSuccessResponse(event);\r\n                })\r\n            );\r\n    }\r\n\r\n    protected tryGetRefreshTokenService(): Observable<boolean> {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    private isRefreshing = false;\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    private tryAuthWithRefreshToken(request: HttpRequest<any>, next: HttpHandler, error: any) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.tryGetRefreshTokenService().pipe(\r\n                switchMap((authResult: boolean) => {\r\n                    this.isRefreshing = false;\r\n                    if (authResult) {\r\n                        this.refreshTokenSubject.next(authResult);\r\n                        let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                        return next.handle(modifiedRequest);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }));\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(authResult => authResult != null),\r\n                take(1),\r\n                switchMap(authResult => {\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }));\r\n        }\r\n    }\r\n\r\n    protected normalizeRequestHeaders(request: HttpRequest<any>): HttpRequest<any> {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n\r\n    protected addXRequestedWithHeader(headers: HttpHeaders): HttpHeaders {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAspNetCoreCultureHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAcceptLanguageHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addTenantIdHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAuthorizationHeaders(headers: HttpHeaders): HttpHeaders {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n\r\n        if (!this.itemExists(authorizationHeaders, (item: string) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected handleSuccessResponse(event: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n        var self = this;\r\n\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(\r\n                    map(\r\n                        json => {\r\n                            const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n\r\n                            var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                                body: responseBody\r\n                            }));\r\n\r\n                            return modifiedResponse.clone({\r\n                                body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                            });\r\n                        })\r\n                );\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n\r\n    protected handleErrorResponse(error: any): Observable<never> {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n\r\n        return this.configuration.blobToText(error.error).pipe(\r\n            switchMap((json) => {\r\n                const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n                const errorResponse = new HttpResponse({\r\n                    headers: error.headers,\r\n                    status: error.status,\r\n                    body: errorBody\r\n                });\r\n\r\n                var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n\r\n                if (ajaxResponse != null) {\r\n                    this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n                } else {\r\n                    this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n                }\r\n\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private itemExists<T>(items: T[], predicate: (item: T) => boolean): boolean {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","/*\n * Public API Surface of abp-ng2-module\n */\n\nexport * from './lib/abp.module';\nexport * from './lib/services/';\nexport * from './lib/interceptors/';\nexport * from './lib/models/';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}