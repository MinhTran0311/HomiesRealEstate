{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://abp-ng2-module/lib/abp.module.ts","ng://abp-ng2-module/lib/services/auth/token.service.ts","ng://abp-ng2-module/lib/services/auth/permission-checker.service.ts","ng://abp-ng2-module/lib/services/features/feature-checker.service.ts","ng://abp-ng2-module/lib/services/localization/localization.service.ts","ng://abp-ng2-module/lib/services/log/log.service.ts","ng://abp-ng2-module/lib/services/message/message.service.ts","ng://abp-ng2-module/lib/services/multi-tenancy/abp-multi-tenancy.service.ts","ng://abp-ng2-module/lib/services/notify/notify.service.ts","ng://abp-ng2-module/lib/services/session/abp-session.service.ts","ng://abp-ng2-module/lib/services/settings/setting.service.ts","ng://abp-ng2-module/lib/services/utils/utils.service.ts","ng://abp-ng2-module/lib/services/abp-user-configuration.service.ts","ng://abp-ng2-module/lib/interceptors/abp-http-configuration.service.ts","ng://abp-ng2-module/lib/interceptors/refresh-token.service.ts","ng://abp-ng2-module/lib/interceptors/abpHttpInterceptor.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","AbpModule","NgModule","declarations","imports","exports","TokenService","prototype","getToken","abp","auth","getTokenCookieName","tokenCookieName","clearToken","setToken","authToken","expireDate","getRefreshToken","getRefreshTokenCookieName","refreshTokenCookieName","clearRefreshToken","setRefreshToken","refreshToken","Injectable","providedIn","PermissionCheckerService","isGranted","permissionName","FeatureCheckerService","get","featureName","features","getValue","isEnabled","LocalizationService","localization","languages","currentLanguage","localize","sourceName","getSource","LogService","debug","logObject","log","info","warn","error","fatal","MessageService","message","title","options","success","confirm","callback","AbpMultiTenancyService","multiTenancy","NotifyService","notify","AbpSessionService","session","userId","tenantId","impersonatorUserId","impersonatorTenantId","multiTenancySide","SettingService","name","setting","getBoolean","getInt","UtilsService","getCookieValue","utils","setCookieValue","value","path","domain","attributes","deleteCookie","AbpUserConfigurationService","_http","this","initialize","subscribe","result","jQuery","extend","JSON","parse","stringify","HttpClient","AbpHttpConfigurationService","_messageService","_logService","defaultError","details","defaultError401","defaultError403","defaultError404","logError","showError","handleTargetUrl","targetUrl","location","href","handleUnAuthorizedRequest","messagePromise","_this","done","handleNonAbpErrorResponse","response","status","handleAbpResponse","ajaxResponse","newResponse","clone","body","getAbpAjaxResponseOrNull","headers","contentType","indexOf","responseObj","__abp","handleResponse","blobToText","blob","Observable","observer","reader","FileReader","onload","next","complete","readAsText","RefreshTokenService","AbpHttpInterceptor","configuration","_injector","_tokenService","_utilsService","isRefreshing","refreshTokenSubject","BehaviorSubject","intercept","request","modifiedRequest","normalizeRequestHeaders","handle","pipe","catchError","HttpErrorResponse","tryAuthWithRefreshToken","handleErrorResponse","switchMap","event","handleSuccessResponse","tryGetRefreshTokenService","_refreshTokenService","of","filter","authResult","take","modifiedHeaders","HttpHeaders","set","addXRequestedWithHeader","addAuthorizationHeaders","addAspNetCoreCultureHeader","addAcceptLanguageHeader","addTenantIdHeader","cookieLangValue","has","cookieTenantIdValue","tenantIdCookieName","authorizationHeaders","getAll","itemExists","item","token","self","HttpResponse","Blob","type","map","json","responseBody","modifiedResponse","errorBody","errorResponse","throwError","items","predicate","Injector"],"mappings":";;;;;;;;;;;;;;oFAoDO,SAASA,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HC,EAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,EACrH,GAAuB,iBAAZQ,SAAoD,mBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASZ,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIU,EAAIb,EAAWO,OAAS,EAAGM,GAAK,EAAGA,KAAST,EAAIJ,EAAWa,MAAIL,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,GAChJ,OAAOH,EAAI,GAAKG,GAAKC,OAAOK,eAAeb,EAAQC,EAAKM,GAAIA,mBChDhE,SAAAO,KAAyB,OAAZA,EAAShB,EAAA,CANrBiB,EAAAA,SAAS,CACRC,aAAc,GACdC,QAAS,GAETC,QAAS,MAEEJ,mBCDb,SAAAK,YAEIA,EAAAC,UAAAC,SAAA,WACI,OAAOC,IAAIC,KAAKF,YAGpBF,EAAAC,UAAAI,mBAAA,WACI,OAAOF,IAAIC,KAAKE,iBAGpBN,EAAAC,UAAAM,WAAA,WACIJ,IAAIC,KAAKG,cAGbP,EAAAC,UAAAO,SAAA,SAASC,EAAmBC,GACxBP,IAAIC,KAAKI,SAASC,EAAWC,IAIjCV,EAAAC,UAAAU,gBAAA,WACI,OAAOR,IAAIC,KAAKO,mBAGpBX,EAAAC,UAAAW,0BAAA,WACI,OAAOT,IAAIC,KAAKS,wBAGpBb,EAAAC,UAAAa,kBAAA,WACIX,IAAIC,KAAKU,qBAGbd,EAAAC,UAAAc,gBAAA,SAAgBC,EAAsBN,GAClCP,IAAIC,KAAKW,gBAAgBC,EAAcN,kGAhClCV,EAAYrB,EAAA,CAHxBsC,EAAAA,WAAW,CACRC,WAAY,UAEHlB,mBCAb,SAAAmB,YAEIA,EAAAlB,UAAAmB,UAAA,SAAUC,GACN,OAAOlB,IAAIC,KAAKgB,UAAUC,kGAHrBF,EAAwBxC,EAAA,CAHpCsC,EAAAA,WAAW,CACRC,WAAY,UAEHC,mBCAb,SAAAG,YAEIA,EAAArB,UAAAsB,IAAA,SAAIC,GACA,OAAOrB,IAAIsB,SAASF,IAAIC,IAG5BF,EAAArB,UAAAyB,SAAA,SAASF,GACL,OAAOrB,IAAIsB,SAASC,SAASF,IAGjCF,EAAArB,UAAA0B,UAAA,SAAUH,GACN,OAAOrB,IAAIsB,SAASE,UAAUH,kGAXzBF,EAAqB3C,EAAA,CAHjCsC,EAAAA,WAAW,CACRC,WAAY,UAEHI,mBCAb,SAAAM,YAEIvC,OAAAK,eAAIkC,EAAA3B,UAAA,YAAS,KAAb,WACI,OAAOE,IAAI0B,aAAaC,2CAG5BzC,OAAAK,eAAIkC,EAAA3B,UAAA,kBAAe,KAAnB,WACI,OAAOE,IAAI0B,aAAaE,iDAG5BH,EAAA3B,UAAA+B,SAAA,SAASlD,EAAamD,GAClB,OAAO9B,IAAI0B,aAAaG,SAASlD,EAAKmD,IAG1CL,EAAA3B,UAAAiC,UAAA,SAAUD,GACN,OAAO9B,IAAI0B,aAAaK,UAAUD,kGAf7BL,EAAmBjD,EAAA,CAH/BsC,EAAAA,WAAW,CACRC,WAAY,UAEHU,mBCAb,SAAAO,YAEIA,EAAAlC,UAAAmC,MAAA,SAAMC,GACFlC,IAAImC,IAAIF,MAAMC,IAGlBF,EAAAlC,UAAAsC,KAAA,SAAKF,GACDlC,IAAImC,IAAIC,KAAKF,IAGjBF,EAAAlC,UAAAuC,KAAA,SAAKH,GACDlC,IAAImC,IAAIE,KAAKH,IAGjBF,EAAAlC,UAAAwC,MAAA,SAAMJ,GACFlC,IAAImC,IAAIG,MAAMJ,IAGlBF,EAAAlC,UAAAyC,MAAA,SAAML,GACFlC,IAAImC,IAAII,MAAML,kGAnBTF,EAAUxD,EAAA,CAHtBsC,EAAAA,WAAW,CACRC,WAAY,UAEHiB,mBCAb,SAAAQ,YAEIA,EAAA1C,UAAAsC,KAAA,SAAKK,EAAiBC,EAAgBC,GAClC,OAAO3C,IAAIyC,QAAQL,KAAKK,EAASC,EAAOC,IAG5CH,EAAA1C,UAAA8C,QAAA,SAAQH,EAAiBC,EAAgBC,GACrC,OAAO3C,IAAIyC,QAAQG,QAAQH,EAASC,EAAOC,IAG/CH,EAAA1C,UAAAuC,KAAA,SAAKI,EAAiBC,EAAgBC,GAClC,OAAO3C,IAAIyC,QAAQJ,KAAKI,EAASC,EAAOC,IAG5CH,EAAA1C,UAAAwC,MAAA,SAAMG,EAAiBC,EAAgBC,GACnC,OAAO3C,IAAIyC,QAAQH,MAAMG,EAASC,EAAOC,IAG7CH,EAAA1C,UAAA+C,QAAA,SAAQJ,EAAiBC,EAAgBI,EAAsCH,GAC3E,OAAO3C,IAAIyC,QAAQI,QAAQJ,EAASC,EAAOI,EAAUH,kGAnBhDH,EAAchE,EAAA,CAH1BsC,EAAAA,WAAW,CACRC,WAAY,UAEHyB,mBCAb,SAAAO,YAEI7D,OAAAK,eAAIwD,EAAAjD,UAAA,YAAS,KAAb,WACI,OAAOE,IAAIgD,aAAaxB,yIAHnBuB,EAAsBvE,EAAA,CAHlCsC,EAAAA,WAAW,CACRC,WAAY,UAEHgC,mBCAb,SAAAE,YAEIA,EAAAnD,UAAAsC,KAAA,SAAKK,EAAiBC,EAAgBC,GAClC3C,IAAIkD,OAAOd,KAAKK,EAASC,EAAOC,IAGpCM,EAAAnD,UAAA8C,QAAA,SAAQH,EAAiBC,EAAgBC,GACrC3C,IAAIkD,OAAON,QAAQH,EAASC,EAAOC,IAGvCM,EAAAnD,UAAAuC,KAAA,SAAKI,EAAiBC,EAAgBC,GAClC3C,IAAIkD,OAAOb,KAAKI,EAASC,EAAOC,IAGpCM,EAAAnD,UAAAwC,MAAA,SAAMG,EAAiBC,EAAgBC,GACnC3C,IAAIkD,OAAOZ,MAAMG,EAASC,EAAOC,kGAf5BM,EAAazE,EAAA,CAHzBsC,EAAAA,WAAW,CACRC,WAAY,UAEHkC,mBCAb,SAAAE,YAEIjE,OAAAK,eAAI4D,EAAArD,UAAA,SAAM,KAAV,WACI,OAAOE,IAAIoD,QAAQC,wCAGvBnE,OAAAK,eAAI4D,EAAArD,UAAA,WAAQ,KAAZ,WACI,OAAOE,IAAIoD,QAAQE,0CAGvBpE,OAAAK,eAAI4D,EAAArD,UAAA,qBAAkB,KAAtB,WACI,OAAOE,IAAIoD,QAAQG,oDAGvBrE,OAAAK,eAAI4D,EAAArD,UAAA,uBAAoB,KAAxB,WACI,OAAOE,IAAIoD,QAAQI,sDAGvBtE,OAAAK,eAAI4D,EAAArD,UAAA,mBAAgB,KAApB,WACI,OAAOE,IAAIoD,QAAQK,gJAnBdN,EAAiB3E,EAAA,CAH7BsC,EAAAA,WAAW,CACRC,WAAY,UAEHoC,mBCAb,SAAAO,YAEIA,EAAA5D,UAAAsB,IAAA,SAAIuC,GACA,OAAO3D,IAAI4D,QAAQxC,IAAIuC,IAG3BD,EAAA5D,UAAA+D,WAAA,SAAWF,GACP,OAAO3D,IAAI4D,QAAQC,WAAWF,IAGlCD,EAAA5D,UAAAgE,OAAA,SAAOH,GACH,OAAO3D,IAAI4D,QAAQE,OAAOH,kGAXrBD,EAAclF,EAAA,CAH1BsC,EAAAA,WAAW,CACRC,WAAY,UAEH2C,mBCAb,SAAAK,YACEA,EAAAjE,UAAAkE,eAAA,SAAerF,GACb,OAAOqB,IAAIiE,MAAMD,eAAerF,IAGlCoF,EAAAjE,UAAAoE,eAAA,SAAevF,EAAawF,EAAe5D,EAAmB6D,EAAeC,EAAiBC,GAC5FtE,IAAIiE,MAAMC,eAAevF,EAAKwF,EAAO5D,EAAY6D,EAAMC,EAAQC,IAGjEP,EAAAjE,UAAAyE,aAAA,SAAa5F,EAAayF,GACxBpE,IAAIiE,MAAMM,aAAa5F,EAAKyF,kGAVnBL,EAAYvF,EAAA,CAHxBsC,EAAAA,WAAW,CACVC,WAAY,UAEDgD,mBCMT,SAAAS,EAAoBC,GAAAC,KAAAD,MAAAA,SAIpBD,EAAA1E,UAAA6E,WAAA,WACID,KAAKD,MAAMrD,IAAI,gCACVwD,WAAU,SAAAC,GACPC,OAAOC,QAAO,EAAM/E,IAAKgF,KAAKC,MAAMD,KAAKE,UAAUL,kDAPpCM,EAAAA,yIAFlBX,EAA2BhG,EAAA,CAHvCsC,EAAAA,WAAW,CACRC,WAAY,UAEHyD,mBCCT,SAAAY,EACYC,EACAC,GADAZ,KAAAW,gBAAAA,EACAX,KAAAY,YAAAA,EAGZZ,KAAAa,aAA2B,CACvB9C,QAAS,yBACT+C,QAAS,0CAGbd,KAAAe,gBAA8B,CAC1BhD,QAAS,6BACT+C,QAAS,6EAGbd,KAAAgB,gBAA8B,CAC1BjD,QAAS,0BACT+C,QAAS,kDAGbd,KAAAiB,gBAA8B,CAC1BlD,QAAS,sBACT+C,QAAS,mEAGbJ,EAAAtF,UAAA8F,SAAA,SAAStD,GACLoC,KAAKY,YAAYhD,MAAMA,IAG3B8C,EAAAtF,UAAA+F,UAAA,SAAUvD,GACN,OAAIA,EAAMkD,QACCd,KAAKW,gBAAgB/C,MAAMA,EAAMkD,QAASlD,EAAMG,SAAWiC,KAAKa,aAAa9C,SAE7EiC,KAAKW,gBAAgB/C,MAAMA,EAAMG,SAAWiC,KAAKa,aAAa9C,UAI7E2C,EAAAtF,UAAAgG,gBAAA,SAAgBC,GAIRC,SAASC,KAHRF,GACe,KAMxBX,EAAAtF,UAAAoG,0BAAA,SAA0BC,EAAqBJ,GAA/C,IAAAK,EAAA1B,KAGQyB,EACAA,EAAeE,MAAK,WAChBD,EAAKN,gBAAgBC,GAAa,QAJ7BrB,KAOJoB,gBAAgBC,GAAa,MAI1CX,EAAAtF,UAAAwG,0BAAA,SAA0BC,GAGtB,OAAQA,EAASC,QACb,KAAK,IAHI9B,KAIAwB,0BAJAxB,KAKImB,UALJnB,KAKmBe,iBACpB,KAEJ,MACJ,KAAK,IATIf,KAUAmB,UAVAnB,KAUegB,iBACpB,MACJ,KAAK,IAZIhB,KAaAmB,UAbAnB,KAaeiB,iBACpB,MACJ,QAfSjB,KAgBAmB,UAhBAnB,KAgBea,gBAKhCH,EAAAtF,UAAA2G,kBAAA,SAAkBF,EAA6BG,GAC3C,IAAIC,EA6BJ,OA3BID,EAAa9D,SAEb+D,EAAcJ,EAASK,MAAM,CACzBC,KAAMH,EAAa7B,SAGnB6B,EAAaX,WACbrB,KAAKoB,gBAAgBY,EAAaX,aAItCY,EAAcJ,EAASK,MAAM,CACzBC,KAAMH,EAAa7B,SAGlB6B,EAAapE,QACdoE,EAAapE,MAAQoC,KAAKa,cAG9Bb,KAAKkB,SAASc,EAAapE,OAC3BoC,KAAKmB,UAAUa,EAAapE,OAEJ,MAApBiE,EAASC,QACT9B,KAAKwB,0BAA0B,KAAMQ,EAAaX,YAInDY,GAGXvB,EAAAtF,UAAAgH,yBAAA,SAAyBP,GACrB,IAAKA,IAAaA,EAASQ,QACvB,OAAO,KAGX,IAAIC,EAAcT,EAASQ,QAAQ3F,IAAI,gBACvC,IAAK4F,EAED,OADAtC,KAAKY,YAAYjD,KAAK,6BACf,KAGX,GAAI2E,EAAYC,QAAQ,oBAAsB,EAE1C,OADAvC,KAAKY,YAAYjD,KAAK,yCAA2C2E,GAC1D,KAGX,IAAIE,EAAclC,KAAKC,MAAMD,KAAKE,UAAUqB,EAASM,OACrD,OAAKK,EAAYC,MAIVD,EAHI,MAMf9B,EAAAtF,UAAAsH,eAAA,SAAeb,GACX,IAAIG,EAAehC,KAAKoC,yBAAyBP,GACjD,OAAoB,MAAhBG,EACOH,EAGJ7B,KAAK+B,kBAAkBF,EAAUG,IAG5CtB,EAAAtF,UAAAuH,WAAA,SAAWC,GACP,OAAO,IAAIC,EAAAA,YAAmB,SAACC,GAC3B,GAAKF,EAGE,CACH,IAAIG,EAAS,IAAIC,WACjBD,EAAOE,OAAS,WACZH,EAASI,KAAKlD,KAAKG,QACnB2C,EAASK,YAEbJ,EAAOK,WAAWR,QARlBE,EAASI,KAAK,IACdJ,EAASK,wDApJQrF,SACJR,sIAJhBoD,EAA2B5G,EAAA,CAHvCsC,EAAAA,WAAW,CACRC,WAAY,UAEHqE,mBCNb,SAAA2C,KAKA,OALsBA,EAAmBvJ,EAAA,CADxCsC,EAAAA,cACqBiH,mBCgBlB,SAAAC,EAAYC,EACAC,GAAAxD,KAAAwD,UAAAA,EALJxD,KAAAyD,cAA8B,IAAItI,EAClC6E,KAAA0D,cAA8B,IAAIrE,EAClCW,KAAAY,YAA0B,IAAItD,EAiC9B0C,KAAA2D,cAAe,EACf3D,KAAA4D,oBAA4C,IAAIC,EAAAA,gBAAqB,MA9BzE7D,KAAKuD,cAAgBA,EA2L7B,OAxLID,EAAAlI,UAAA0I,UAAA,SAAUC,EAA2Bb,GAArC,IAAAxB,EAAA1B,KACQgE,EAAkBhE,KAAKiE,wBAAwBF,GACnD,OAAOb,EAAKgB,OAAOF,GACdG,KACGC,EAAAA,YAAW,SAAAxG,GACP,OAAIA,aAAiByG,EAAAA,mBAAsC,MAAjBzG,EAAMkE,OACrCJ,EAAK4C,wBAAwBP,EAASb,EAAMtF,GAE5C8D,EAAK6C,oBAAoB3G,MAGxC4G,EAAAA,WAAU,SAACC,GACP,OAAO/C,EAAKgD,sBAAsBD,QAKxCnB,EAAAlI,UAAAuJ,0BAAV,WACI,IAAIC,EAAuB5E,KAAKwD,UAAU9G,IAAI2G,EAAqB,MAEnE,OAAIuB,EACOA,EAAqBN,0BAEzBO,EAAAA,IAAG,IAMNvB,EAAAlI,UAAAkJ,wBAAR,SAAgCP,EAA2Bb,EAAmBtF,GAA9E,IAAA8D,EAAA1B,KACI,OAAKA,KAAK2D,aAgBC3D,KAAK4D,oBAAoBO,KAC5BW,EAAAA,QAAO,SAAAC,GAAc,OAAc,MAAdA,KACrBC,EAAAA,KAAK,GACLR,EAAAA,WAAU,SAAAO,GACN,IAAIf,EAAkBtC,EAAKuC,wBAAwBF,GACnD,OAAOb,EAAKgB,OAAOF,QApB3BhE,KAAK2D,cAAe,EACpB3D,KAAK4D,oBAAoBV,KAAK,MAEvBlD,KAAK2E,4BAA4BR,KACpCK,EAAAA,WAAU,SAACO,GAEP,GADArD,EAAKiC,cAAe,EAChBoB,EAAY,CACZrD,EAAKkC,oBAAoBV,KAAK6B,GAC9B,IAAIf,EAAkBtC,EAAKuC,wBAAwBF,GACnD,OAAOb,EAAKgB,OAAOF,GAEnB,OAAOtC,EAAK6C,oBAAoB3G,SAc1C0F,EAAAlI,UAAA6I,wBAAV,SAAkCF,GAC9B,IAAIkB,EAAkB,IAAIC,EAAAA,YAW1B,OAVAD,EAAkBlB,EAAQ1B,QAAQ8C,IAAI,SAAU,YAC3CA,IAAI,gBAAiB,YACrBA,IAAI,UAAW,iCAEpBF,EAAkBjF,KAAKoF,wBAAwBH,GAC/CA,EAAkBjF,KAAKqF,wBAAwBJ,GAC/CA,EAAkBjF,KAAKsF,2BAA2BL,GAClDA,EAAkBjF,KAAKuF,wBAAwBN,GAC/CA,EAAkBjF,KAAKwF,kBAAkBP,GAElClB,EAAQ7B,MAAM,CACjBG,QAAS4C,KAIP3B,EAAAlI,UAAAgK,wBAAV,SAAkC/C,GAK9B,OAJIA,IACAA,EAAUA,EAAQ8C,IAAI,mBAAoB,mBAGvC9C,GAGDiB,EAAAlI,UAAAkK,2BAAV,SAAqCjD,GACjC,IAAIoD,EAAkBzF,KAAK0D,cAAcpE,eAAe,gCAKxD,OAJImG,GAAmBpD,IAAYA,EAAQqD,IAAI,yBAC3CrD,EAAUA,EAAQ8C,IAAI,sBAAuBM,IAG1CpD,GAGDiB,EAAAlI,UAAAmK,wBAAV,SAAkClD,GAC9B,IAAIoD,EAAkBzF,KAAK0D,cAAcpE,eAAe,gCAKxD,OAJImG,GAAmBpD,IAAYA,EAAQqD,IAAI,qBAC3CrD,EAAUA,EAAQ8C,IAAI,kBAAmBM,IAGtCpD,GAGDiB,EAAAlI,UAAAoK,kBAAV,SAA4BnD,GACxB,IAAIsD,EAAsB3F,KAAK0D,cAAcpE,eAAehE,IAAIgD,aAAasH,oBAK7E,OAJID,GAAuBtD,IAAYA,EAAQqD,IAAIpK,IAAIgD,aAAasH,sBAChEvD,EAAUA,EAAQ8C,IAAI7J,IAAIgD,aAAasH,mBAAoBD,IAGxDtD,GAGDiB,EAAAlI,UAAAiK,wBAAV,SAAkChD,GAC9B,IAAIwD,EAAuBxD,EAAUA,EAAQyD,OAAO,iBAAmB,KAKvE,GAJKD,IACDA,EAAuB,KAGtB7F,KAAK+F,WAAWF,GAAsB,SAACG,GAAiB,OAA2B,GAA3BA,EAAKzD,QAAQ,cAAkB,CACxF,IAAI0D,EAAQjG,KAAKyD,cAAcpI,WAC3BgH,GAAW4D,IACX5D,EAAUA,EAAQ8C,IAAI,gBAAiB,UAAYc,IAI3D,OAAO5D,GAGDiB,EAAAlI,UAAAsJ,sBAAV,SAAgCD,GAC5B,IAAIyB,EAAOlG,KAEX,OAAIyE,aAAiB0B,EAAAA,cACb1B,EAAMtC,gBAAgBiE,MAAQ3B,EAAMtC,KAAKkE,MAAQ5B,EAAMtC,KAAKkE,KAAK9D,QAAQ,qBAAuB,EACzF2D,EAAK3C,cAAcZ,WAAW8B,EAAMtC,MAAMgC,KAC7CmC,EAAAA,KACI,SAAAC,GACI,IAAMC,EAAuB,QAARD,EAAiB,GAAKjG,KAAKC,MAAMgG,GAElDE,EAAmBP,EAAK3C,cAAcb,eAAe+B,EAAMvC,MAAM,CACjEC,KAAMqE,KAGV,OAAOC,EAAiBvE,MAAM,CAC1BC,KAAM,IAAIiE,KAAK,CAAC9F,KAAKE,UAAUiG,EAAiBtE,OAAQ,CAAEkE,KAAM,2BAMjFxB,EAAAA,GAAGJ,IAGJnB,EAAAlI,UAAAmJ,oBAAV,SAA8B3G,GAA9B,IAAA8D,EAAA1B,KACI,OAAMpC,EAAMA,iBAAiBwI,KAItBpG,KAAKuD,cAAcZ,WAAW/E,EAAMA,OAAOuG,KAC9CK,EAAAA,WAAU,SAAC+B,GACP,IAAMG,EAAqB,IAARH,GAAsB,QAARA,EAAkB,GAAKjG,KAAKC,MAAMgG,GAC7DI,EAAgB,IAAIR,EAAAA,aAAa,CACnC9D,QAASzE,EAAMyE,QACfP,OAAQlE,EAAMkE,OACdK,KAAMuE,IAGN1E,EAAeN,EAAK6B,cAAcnB,yBAAyBuE,GAQ/D,OANoB,MAAhB3E,EACAN,EAAK6B,cAAcxB,kBAAkB4E,EAAe3E,GAEpDN,EAAK6B,cAAc3B,0BAA0B+E,GAG1CC,EAAAA,WAAWhJ,OApBfgJ,EAAAA,WAAWhJ,IAyBlB0F,EAAAlI,UAAA2K,WAAR,SAAsBc,EAAYC,GAC9B,IAAK,IAAIlM,EAAI,EAAGA,EAAIiM,EAAMvM,OAAQM,IAC9B,GAAIkM,EAAUD,EAAMjM,IAChB,OAAO,EAIf,OAAO,4CA3LgB8F,SACJqG,EAAAA,YARdzD,EAAkBxJ,EAAA,CAD9BsC,EAAAA,cACYkH","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class AbpModule { }\n","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n\r\n    getToken(): string {\r\n        return abp.auth.getToken();\r\n    }\r\n\r\n    getTokenCookieName(): string {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n\r\n    clearToken(): void {\r\n        abp.auth.clearToken();\r\n    }\r\n\r\n    setToken(authToken: string, expireDate?: Date): void {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n\r\n    //refresh token\r\n    getRefreshToken(): string {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n\r\n    getRefreshTokenCookieName(): string {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n\r\n    clearRefreshToken(): void {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n\r\n    setRefreshToken(refreshToken: string, expireDate?: Date): void {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PermissionCheckerService {\r\n\r\n    isGranted(permissionName: string): boolean {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FeatureCheckerService {\r\n\r\n    get(featureName: string): abp.features.IFeature {\r\n        return abp.features.get(featureName);\r\n    }\r\n\r\n    getValue(featureName: string): string {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n\r\n    isEnabled(featureName: string): boolean {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LocalizationService {\r\n\r\n    get languages(): abp.localization.ILanguageInfo[] {\r\n        return abp.localization.languages;\r\n    }\r\n\r\n    get currentLanguage(): abp.localization.ILanguageInfo {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n\r\n    localize(key: string, sourceName: string): string {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    \r\n    getSource(sourceName: string): (...key: string[]) => string {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n    debug(logObject?: any): void {\r\n        abp.log.debug(logObject);\r\n    }\r\n\r\n    info(logObject?: any): void {\r\n        abp.log.info(logObject);\r\n    }\r\n\r\n    warn(logObject?: any): void {\r\n        abp.log.warn(logObject);\r\n    }\r\n\r\n    error(logObject?: any): void {\r\n        abp.log.error(logObject);\r\n    }\r\n\r\n    fatal(logObject?: any): void {\r\n        abp.log.fatal(logObject);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n    info(message: string, title?: string, options?: any): any {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): any {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): any {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): any {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n\r\n    confirm(message: string, title?: string, callback?: (result: boolean) => void, options?: any): any {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpMultiTenancyService {\r\n\r\n    get isEnabled(): boolean {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotifyService {\r\n\r\n    info(message: string, title?: string, options?: any): void {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n\r\n    success(message: string, title?: string, options?: any): void {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n\r\n    warn(message: string, title?: string, options?: any): void {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n\r\n    error(message: string, title?: string, options?: any): void {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpSessionService {\r\n\r\n    get userId(): number | undefined {\r\n        return abp.session.userId;\r\n    }\r\n\r\n    get tenantId(): number | undefined {\r\n        return abp.session.tenantId;\r\n    }\r\n\r\n    get impersonatorUserId(): number | undefined {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n\r\n    get impersonatorTenantId(): number | undefined {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n\r\n    get multiTenancySide(): abp.multiTenancy.sides {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingService {\r\n\r\n    get(name: string): string {\r\n        return abp.setting.get(name);\r\n    }\r\n\r\n    getBoolean(name: string): boolean {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    \r\n    getInt(name: string): number {\r\n        return abp.setting.getInt(name);\r\n    }\r\n\r\n}","///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilsService {\r\n  getCookieValue(key: string): string {\r\n    return abp.utils.getCookieValue(key);\r\n  }\r\n\r\n  setCookieValue(key: string, value: string, expireDate?: Date, path?: string, domain?: string, attributes?: any): void {\r\n    abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\r\n  }\r\n\r\n  deleteCookie(key: string, path?: string): void {\r\n    abp.utils.deleteCookie(key, path);\r\n  }\r\n}\r\n","///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var abp: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpUserConfigurationService {\r\n\r\n    constructor(private _http: HttpClient) {\r\n        \r\n    }\r\n\r\n    initialize(): void {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n                jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n            });\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { MessageService } from '../services/message/message.service';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IErrorInfo, IAjaxResponse } from '../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AbpHttpConfigurationService {\r\n\r\n    constructor(\r\n        private _messageService: MessageService,\r\n        private _logService: LogService) {\r\n    }\r\n\r\n    defaultError = <IErrorInfo>{\r\n        message: 'An error has occurred!',\r\n        details: 'Error details were not sent by server.'\r\n    };\r\n\r\n    defaultError401 = <IErrorInfo>{\r\n        message: 'You are not authenticated!',\r\n        details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n    };\r\n\r\n    defaultError403 = <IErrorInfo>{\r\n        message: 'You are not authorized!',\r\n        details: 'You are not allowed to perform this operation.'\r\n    };\r\n\r\n    defaultError404 = <IErrorInfo>{\r\n        message: 'Resource not found!',\r\n        details: 'The resource requested could not be found on the server.'\r\n    };\r\n\r\n    logError(error: IErrorInfo): void {\r\n        this._logService.error(error);\r\n    }\r\n\r\n    showError(error: IErrorInfo): any {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        } else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n\r\n    handleTargetUrl(targetUrl: string): void {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        } else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n\r\n    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string) {\r\n        const self = this;\r\n\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        } else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n\r\n    handleNonAbpErrorResponse(response: HttpResponse<any>) {\r\n        const self = this;\r\n\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(\r\n                    self.showError(self.defaultError401),\r\n                    '/'\r\n                );\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any> {\r\n        var newResponse: HttpResponse<any>;\r\n\r\n        if (ajaxResponse.success) {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);;\r\n            }\r\n        } else {\r\n\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n\r\n        return newResponse;\r\n    }\r\n\r\n    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n\r\n        return responseObj as IAjaxResponse;\r\n    }\r\n\r\n    handleResponse(response: HttpResponse<any>): HttpResponse<any> {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n\r\n    blobToText(blob: any): Observable<string> {\r\n        return new Observable<string>((observer: any) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            } else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                }\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport abstract class RefreshTokenService {\r\n    /**\r\n     * Try to authenticate with refresh token and return if auth succeed\r\n     */\r\n    abstract tryAuthWithRefreshToken(): Observable<boolean>;\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { LogService } from '../services/log/log.service';\r\nimport { TokenService } from '../services/auth/token.service';\r\nimport { UtilsService } from '../services/utils/utils.service';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { switchMap, filter, take, catchError, tap, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\nimport { AbpHttpConfigurationService } from './abp-http-configuration.service'\r\nimport { RefreshTokenService } from './refresh-token.service'\r\ndeclare const abp: any;\r\n\r\n@Injectable()\r\nexport class AbpHttpInterceptor implements HttpInterceptor {\r\n\r\n    protected configuration: AbpHttpConfigurationService;\r\n    private _tokenService: TokenService = new TokenService();\r\n    private _utilsService: UtilsService = new UtilsService();\r\n    private _logService: LogService = new LogService();\r\n\r\n    constructor(configuration: AbpHttpConfigurationService,\r\n        private _injector: Injector) {\r\n        this.configuration = configuration;\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(\r\n                catchError(error => {\r\n                    if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                        return this.tryAuthWithRefreshToken(request, next, error);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }),\r\n                switchMap((event) => {\r\n                    return this.handleSuccessResponse(event);\r\n                })\r\n            );\r\n    }\r\n\r\n    protected tryGetRefreshTokenService(): Observable<boolean> {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n\r\n    private isRefreshing = false;\r\n    private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n    private tryAuthWithRefreshToken(request: HttpRequest<any>, next: HttpHandler, error: any) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n\r\n            return this.tryGetRefreshTokenService().pipe(\r\n                switchMap((authResult: boolean) => {\r\n                    this.isRefreshing = false;\r\n                    if (authResult) {\r\n                        this.refreshTokenSubject.next(authResult);\r\n                        let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                        return next.handle(modifiedRequest);\r\n                    } else {\r\n                        return this.handleErrorResponse(error);\r\n                    }\r\n                }));\r\n        } else {\r\n            return this.refreshTokenSubject.pipe(\r\n                filter(authResult => authResult != null),\r\n                take(1),\r\n                switchMap(authResult => {\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }));\r\n        }\r\n    }\r\n\r\n    protected normalizeRequestHeaders(request: HttpRequest<any>): HttpRequest<any> {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n\r\n    protected addXRequestedWithHeader(headers: HttpHeaders): HttpHeaders {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAspNetCoreCultureHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAcceptLanguageHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addTenantIdHeader(headers: HttpHeaders): HttpHeaders {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected addAuthorizationHeaders(headers: HttpHeaders): HttpHeaders {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n\r\n        if (!this.itemExists(authorizationHeaders, (item: string) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    protected handleSuccessResponse(event: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n        var self = this;\r\n\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(\r\n                    map(\r\n                        json => {\r\n                            const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n\r\n                            var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                                body: responseBody\r\n                            }));\r\n\r\n                            return modifiedResponse.clone({\r\n                                body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                            });\r\n                        })\r\n                );\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n\r\n    protected handleErrorResponse(error: any): Observable<never> {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n\r\n        return this.configuration.blobToText(error.error).pipe(\r\n            switchMap((json) => {\r\n                const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n                const errorResponse = new HttpResponse({\r\n                    headers: error.headers,\r\n                    status: error.status,\r\n                    body: errorBody\r\n                });\r\n\r\n                var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n\r\n                if (ajaxResponse != null) {\r\n                    this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n                } else {\r\n                    this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n                }\r\n\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private itemExists<T>(items: T[], predicate: (item: T) => boolean): boolean {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n"]}