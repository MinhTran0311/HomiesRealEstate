import { Observable } from 'rxjs';
import { MessageService } from '../services/message/message.service';
import { LogService } from '../services/log/log.service';
import { HttpResponse } from '@angular/common/http';
import { IErrorInfo, IAjaxResponse } from '../models';
import * as ɵngcc0 from '@angular/core';
export declare class AbpHttpConfigurationService {
    private _messageService;
    private _logService;
    constructor(_messageService: MessageService, _logService: LogService);
    defaultError: IErrorInfo;
    defaultError401: IErrorInfo;
    defaultError403: IErrorInfo;
    defaultError404: IErrorInfo;
    logError(error: IErrorInfo): void;
    showError(error: IErrorInfo): any;
    handleTargetUrl(targetUrl: string): void;
    handleUnAuthorizedRequest(messagePromise: any, targetUrl?: string): void;
    handleNonAbpErrorResponse(response: HttpResponse<any>): void;
    handleAbpResponse(response: HttpResponse<any>, ajaxResponse: IAjaxResponse): HttpResponse<any>;
    getAbpAjaxResponseOrNull(response: HttpResponse<any>): IAjaxResponse | null;
    handleResponse(response: HttpResponse<any>): HttpResponse<any>;
    blobToText(blob: any): Observable<string>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AbpHttpConfigurationService, never>;
}

//# sourceMappingURL=abp-http-configuration.service.d.ts.map